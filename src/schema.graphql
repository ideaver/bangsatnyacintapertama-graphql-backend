# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""Batas Pengiriman 1000 email per hari"""
type emailQueue {
  id: Int!
  createdAt: DateTime!
  status: QueueStatus!
  guestId: String!
  guest: Guest!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

enum QueueStatus {
  WAITING
  SENDING
  SENT
  FAILED
}

type GuestCountAggregate {
  userId: Int!
  category1: Int!
  category2: Int!
  personInCharge: Int!
  class: Int!
  seat: Int!
  rejectionReason: Int!
  description: Int!
  checkInAt: Int!
  confirmationStatus: Int!
  _all: Int!
}

type GuestCount {
  emailQueue: Int!
  whatsappQueue: Int!
}

type GuestMaxAggregate {
  userId: String
  category1: String
  category2: String
  personInCharge: String
  class: String
  seat: String
  rejectionReason: String
  description: String
  checkInAt: DateTime
  confirmationStatus: ConfirmationStatus
}

enum ConfirmationStatus {
  UNCONFIRMED
  CONFIRMED
  REJECTED
}

type GuestMinAggregate {
  userId: String
  category1: String
  category2: String
  personInCharge: String
  class: String
  seat: String
  rejectionReason: String
  description: String
  checkInAt: DateTime
  confirmationStatus: ConfirmationStatus
}

type Guest {
  userId: String!
  category1: String
  category2: String
  personInCharge: String
  class: String
  seat: String
  rejectionReason: String
  description: String
  checkInAt: DateTime
  confirmationStatus: ConfirmationStatus!
  user: User!
  emailQueue: [emailQueue!]
  whatsappQueue: [whatsappQueue!]
  _count: GuestCount!
}

type EmailQueueAvgAggregate {
  id: Float
}

type EmailQueueCountAggregate {
  id: Int!
  createdAt: Int!
  status: Int!
  guestId: Int!
  _all: Int!
}

type EmailQueueMaxAggregate {
  id: Int
  createdAt: DateTime
  status: QueueStatus
  guestId: String
}

type EmailQueueMinAggregate {
  id: Int
  createdAt: DateTime
  status: QueueStatus
  guestId: String
}

type EmailQueueSumAggregate {
  id: Int
}

type WhatsappQueueAvgAggregate {
  id: Float
}

type WhatsappQueueCountAggregate {
  id: Int!
  createdAt: Int!
  status: Int!
  guestId: Int!
  _all: Int!
}

type WhatsappQueueMaxAggregate {
  id: Int
  createdAt: DateTime
  status: QueueStatus
  guestId: String
}

type WhatsappQueueMinAggregate {
  id: Int
  createdAt: DateTime
  status: QueueStatus
  guestId: String
}

type WhatsappQueueSumAggregate {
  id: Int
}

type AggregateUser {
  _count: UserCountAggregate
  _min: UserMinAggregate
  _max: UserMaxAggregate
}

type UserCountAggregate {
  id: Int!
  fullName: Int!
  email: Int!
  password: Int!
  whatsapp: Int!
  createdAt: Int!
  updatedAt: Int!
  deletedAt: Int!
  role: Int!
  guestInfoId: Int!
  _all: Int!
}

type UserMaxAggregate {
  id: String
  fullName: String
  email: String
  password: String
  whatsapp: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  role: UserRole
  guestInfoId: String
}

enum UserRole {
  ADMIN
  SUPERUSER
  GUEST
}

type UserMinAggregate {
  id: String
  fullName: String
  email: String
  password: String
  whatsapp: String
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  role: UserRole
  guestInfoId: String
}

type User {
  id: String!
  fullName: String!
  email: String!
  password: String!
  whatsapp: String!
  createdAt: DateTime!
  updatedAt: DateTime!
  deletedAt: DateTime
  role: UserRole!
  guestInfoId: String
  guestInfo: Guest
}

type whatsappQueue {
  id: Int!
  createdAt: DateTime!
  status: QueueStatus!
  guestId: String!
  guest: Guest!
}

type LoginResponse {
  """Akses token jwt"""
  accessToken: String!
  user: User!
}

type BatchPayload {
  count: Float
}

type Query {
  """Deskripsinya ada disini loh"""
  userFindOne(where: UserWhereUniqueInput!): User

  """Deskripsinya ada disini loh"""
  userFindMany(where: UserWhereInput, orderBy: [UserOrderByWithRelationInput!], cursor: UserWhereUniqueInput, take: Int, skip: Int, distinct: [UserScalarFieldEnum!]): [User!]

  """Deskripsinya ada disini loh"""
  userFindFirst(where: UserWhereInput, orderBy: [UserOrderByWithRelationInput!], cursor: UserWhereUniqueInput, take: Int, skip: Int, distinct: [UserScalarFieldEnum!]): User

  """Deskripsinya ada disini loh"""
  userAggregate(where: UserWhereInput, orderBy: [UserOrderByWithRelationInput!], cursor: UserWhereUniqueInput, take: Int, skip: Int, _count: UserCountAggregateInput, _min: UserMinAggregateInput, _max: UserMaxAggregateInput): AggregateUser

  """Deskripsinya ada disini loh"""
  userCount(where: UserWhereInput, orderBy: [UserOrderByWithRelationInput!], cursor: UserWhereUniqueInput, take: Int, skip: Int, distinct: [UserScalarFieldEnum!]): Float
}

input UserWhereUniqueInput {
  id: String
  email: String
  whatsapp: String
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  fullName: StringFilter
  password: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  role: EnumUserRoleFilter
  guestInfoId: StringNullableFilter
  guestInfo: GuestNullableRelationFilter
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: StringFilter
  fullName: StringFilter
  email: StringFilter
  password: StringFilter
  whatsapp: StringFilter
  createdAt: DateTimeFilter
  updatedAt: DateTimeFilter
  deletedAt: DateTimeNullableFilter
  role: EnumUserRoleFilter
  guestInfoId: StringNullableFilter
  guestInfo: GuestNullableRelationFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input DateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input NestedDateTimeFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeFilter
}

input DateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableFilter
}

input NestedDateTimeNullableFilter {
  equals: DateTime
  in: [DateTime!]
  notIn: [DateTime!]
  lt: DateTime
  lte: DateTime
  gt: DateTime
  gte: DateTime
  not: NestedDateTimeNullableFilter
}

input EnumUserRoleFilter {
  equals: UserRole
  in: [UserRole!]
  notIn: [UserRole!]
  not: NestedEnumUserRoleFilter
}

input NestedEnumUserRoleFilter {
  equals: UserRole
  in: [UserRole!]
  notIn: [UserRole!]
  not: NestedEnumUserRoleFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input NestedStringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringNullableFilter
}

input GuestNullableRelationFilter {
  is: GuestWhereInput
  isNot: GuestWhereInput
}

input GuestWhereInput {
  AND: [GuestWhereInput!]
  OR: [GuestWhereInput!]
  NOT: [GuestWhereInput!]
  userId: StringFilter
  category1: StringNullableFilter
  category2: StringNullableFilter
  personInCharge: StringNullableFilter
  class: StringNullableFilter
  seat: StringNullableFilter
  rejectionReason: StringNullableFilter
  description: StringNullableFilter
  checkInAt: DateTimeNullableFilter
  confirmationStatus: EnumConfirmationStatusFilter
  user: UserRelationFilter
  emailQueue: EmailQueueListRelationFilter
  whatsappQueue: WhatsappQueueListRelationFilter
}

input EnumConfirmationStatusFilter {
  equals: ConfirmationStatus
  in: [ConfirmationStatus!]
  notIn: [ConfirmationStatus!]
  not: NestedEnumConfirmationStatusFilter
}

input NestedEnumConfirmationStatusFilter {
  equals: ConfirmationStatus
  in: [ConfirmationStatus!]
  notIn: [ConfirmationStatus!]
  not: NestedEnumConfirmationStatusFilter
}

input UserRelationFilter {
  is: UserWhereInput
  isNot: UserWhereInput
}

input EmailQueueListRelationFilter {
  every: emailQueueWhereInput
  some: emailQueueWhereInput
  none: emailQueueWhereInput
}

input emailQueueWhereInput {
  AND: [emailQueueWhereInput!]
  OR: [emailQueueWhereInput!]
  NOT: [emailQueueWhereInput!]
  id: IntFilter
  createdAt: DateTimeFilter
  status: EnumQueueStatusFilter
  guestId: StringFilter
  guest: GuestRelationFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input NestedIntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: NestedIntFilter
}

input EnumQueueStatusFilter {
  equals: QueueStatus
  in: [QueueStatus!]
  notIn: [QueueStatus!]
  not: NestedEnumQueueStatusFilter
}

input NestedEnumQueueStatusFilter {
  equals: QueueStatus
  in: [QueueStatus!]
  notIn: [QueueStatus!]
  not: NestedEnumQueueStatusFilter
}

input GuestRelationFilter {
  is: GuestWhereInput
  isNot: GuestWhereInput
}

input WhatsappQueueListRelationFilter {
  every: whatsappQueueWhereInput
  some: whatsappQueueWhereInput
  none: whatsappQueueWhereInput
}

input whatsappQueueWhereInput {
  AND: [whatsappQueueWhereInput!]
  OR: [whatsappQueueWhereInput!]
  NOT: [whatsappQueueWhereInput!]
  id: IntFilter
  createdAt: DateTimeFilter
  status: EnumQueueStatusFilter
  guestId: StringFilter
  guest: GuestRelationFilter
}

input UserOrderByWithRelationInput {
  id: SortOrder
  fullName: SortOrder
  email: SortOrder
  password: SortOrder
  whatsapp: SortOrder
  createdAt: SortOrder
  updatedAt: SortOrder
  deletedAt: SortOrderInput
  role: SortOrder
  guestInfoId: SortOrderInput
  guestInfo: GuestOrderByWithRelationInput
}

enum SortOrder {
  asc
  desc
}

input SortOrderInput {
  sort: SortOrder!
  nulls: NullsOrder
}

enum NullsOrder {
  first
  last
}

input GuestOrderByWithRelationInput {
  userId: SortOrder
  category1: SortOrderInput
  category2: SortOrderInput
  personInCharge: SortOrderInput
  class: SortOrderInput
  seat: SortOrderInput
  rejectionReason: SortOrderInput
  description: SortOrderInput
  checkInAt: SortOrderInput
  confirmationStatus: SortOrder
  user: UserOrderByWithRelationInput
  emailQueue: emailQueueOrderByRelationAggregateInput
  whatsappQueue: whatsappQueueOrderByRelationAggregateInput
}

input emailQueueOrderByRelationAggregateInput {
  _count: SortOrder
}

input whatsappQueueOrderByRelationAggregateInput {
  _count: SortOrder
}

enum UserScalarFieldEnum {
  id
  fullName
  email
  password
  whatsapp
  createdAt
  updatedAt
  deletedAt
  role
  guestInfoId
}

input UserCountAggregateInput {
  id: Boolean
  fullName: Boolean
  email: Boolean
  password: Boolean
  whatsapp: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  deletedAt: Boolean
  role: Boolean
  guestInfoId: Boolean
  _all: Boolean
}

input UserMinAggregateInput {
  id: Boolean
  fullName: Boolean
  email: Boolean
  password: Boolean
  whatsapp: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  deletedAt: Boolean
  role: Boolean
  guestInfoId: Boolean
}

input UserMaxAggregateInput {
  id: Boolean
  fullName: Boolean
  email: Boolean
  password: Boolean
  whatsapp: Boolean
  createdAt: Boolean
  updatedAt: Boolean
  deletedAt: Boolean
  role: Boolean
  guestInfoId: Boolean
}

type Mutation {
  authPasswordReset(email: String!): String!

  """Deskripsinya ada disini loh"""
  userCreateOne(data: UserCreateInput!): User

  """Deskripsinya ada disini loh"""
  userCreateMany(data: [UserCreateManyInput!]!, skipDuplicates: Boolean): BatchPayload

  """Deskripsinya ada disini loh"""
  userUpdateOne(data: UserUpdateInput!, where: UserWhereUniqueInput!): User

  """Deskripsinya ada disini loh"""
  userUpdateMany(data: UserUpdateManyMutationInput!, where: UserWhereInput): User

  """Deskripsinya ada disini loh"""
  userDelete(where: UserWhereUniqueInput!): Boolean!

  """Deskripsinya ada disini loh"""
  userDeleteMany(where: UserWhereInput): Boolean!

  """
  Header wajib ada apollo-require-preflight = true agar tidak CSRF error. File JPG akan dicompress
  """
  uploadSingleFile(file: Upload, userId: String!, ratioForImage: RatioEnum): String

  """
  Header wajib ada apollo-require-preflight = true agar tidak CSRF error. File JPG akan dicompress
  """
  uploadMultiFile(files: [Upload!], userId: String!, ratioForImage: RatioEnum): [String!]
  authLogin(loginArgs: LoginArgs!): LoginResponse
}

input UserCreateInput {
  id: String
  fullName: String!
  email: String!
  password: String!
  whatsapp: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  role: UserRole!
  guestInfoId: String
  guestInfo: GuestCreateNestedOneWithoutUserInput
}

input GuestCreateNestedOneWithoutUserInput {
  create: GuestCreateWithoutUserInput
  connectOrCreate: GuestCreateOrConnectWithoutUserInput
  connect: GuestWhereUniqueInput
}

input GuestCreateWithoutUserInput {
  category1: String
  category2: String
  personInCharge: String
  class: String
  seat: String
  rejectionReason: String
  description: String
  checkInAt: DateTime
  confirmationStatus: ConfirmationStatus
  emailQueue: emailQueueCreateNestedManyWithoutGuestInput
  whatsappQueue: whatsappQueueCreateNestedManyWithoutGuestInput
}

input emailQueueCreateNestedManyWithoutGuestInput {
  create: [emailQueueCreateWithoutGuestInput!]
  connectOrCreate: [emailQueueCreateOrConnectWithoutGuestInput!]
  createMany: emailQueueCreateManyGuestInputEnvelope
  connect: [emailQueueWhereUniqueInput!]
}

input emailQueueCreateWithoutGuestInput {
  createdAt: DateTime
  status: QueueStatus
}

input emailQueueCreateOrConnectWithoutGuestInput {
  where: emailQueueWhereUniqueInput!
  create: emailQueueCreateWithoutGuestInput!
}

input emailQueueWhereUniqueInput {
  id: Int
  AND: [emailQueueWhereInput!]
  OR: [emailQueueWhereInput!]
  NOT: [emailQueueWhereInput!]
  createdAt: DateTimeFilter
  status: EnumQueueStatusFilter
  guestId: StringFilter
  guest: GuestRelationFilter
}

input emailQueueCreateManyGuestInputEnvelope {
  data: [emailQueueCreateManyGuestInput!]!
  skipDuplicates: Boolean
}

input emailQueueCreateManyGuestInput {
  id: Int
  createdAt: DateTime
  status: QueueStatus
}

input whatsappQueueCreateNestedManyWithoutGuestInput {
  create: [whatsappQueueCreateWithoutGuestInput!]
  connectOrCreate: [whatsappQueueCreateOrConnectWithoutGuestInput!]
  createMany: whatsappQueueCreateManyGuestInputEnvelope
  connect: [whatsappQueueWhereUniqueInput!]
}

input whatsappQueueCreateWithoutGuestInput {
  createdAt: DateTime
  status: QueueStatus
}

input whatsappQueueCreateOrConnectWithoutGuestInput {
  where: whatsappQueueWhereUniqueInput!
  create: whatsappQueueCreateWithoutGuestInput!
}

input whatsappQueueWhereUniqueInput {
  id: Int
  AND: [whatsappQueueWhereInput!]
  OR: [whatsappQueueWhereInput!]
  NOT: [whatsappQueueWhereInput!]
  createdAt: DateTimeFilter
  status: EnumQueueStatusFilter
  guestId: StringFilter
  guest: GuestRelationFilter
}

input whatsappQueueCreateManyGuestInputEnvelope {
  data: [whatsappQueueCreateManyGuestInput!]!
  skipDuplicates: Boolean
}

input whatsappQueueCreateManyGuestInput {
  id: Int
  createdAt: DateTime
  status: QueueStatus
}

input GuestCreateOrConnectWithoutUserInput {
  where: GuestWhereUniqueInput!
  create: GuestCreateWithoutUserInput!
}

input GuestWhereUniqueInput {
  userId: String
  AND: [GuestWhereInput!]
  OR: [GuestWhereInput!]
  NOT: [GuestWhereInput!]
  category1: StringNullableFilter
  category2: StringNullableFilter
  personInCharge: StringNullableFilter
  class: StringNullableFilter
  seat: StringNullableFilter
  rejectionReason: StringNullableFilter
  description: StringNullableFilter
  checkInAt: DateTimeNullableFilter
  confirmationStatus: EnumConfirmationStatusFilter
  user: UserRelationFilter
  emailQueue: EmailQueueListRelationFilter
  whatsappQueue: WhatsappQueueListRelationFilter
}

input UserCreateManyInput {
  id: String
  fullName: String!
  email: String!
  password: String!
  whatsapp: String!
  createdAt: DateTime
  updatedAt: DateTime
  deletedAt: DateTime
  role: UserRole!
  guestInfoId: String
}

input UserUpdateInput {
  id: StringFieldUpdateOperationsInput
  fullName: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  whatsapp: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  role: EnumUserRoleFieldUpdateOperationsInput
  guestInfoId: NullableStringFieldUpdateOperationsInput
  guestInfo: GuestUpdateOneWithoutUserNestedInput
}

input StringFieldUpdateOperationsInput {
  set: String
}

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input EnumUserRoleFieldUpdateOperationsInput {
  set: UserRole
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

input GuestUpdateOneWithoutUserNestedInput {
  create: GuestCreateWithoutUserInput
  connectOrCreate: GuestCreateOrConnectWithoutUserInput
  upsert: GuestUpsertWithoutUserInput
  disconnect: GuestWhereInput
  delete: GuestWhereInput
  connect: GuestWhereUniqueInput
  update: GuestUpdateToOneWithWhereWithoutUserInput
}

input GuestUpsertWithoutUserInput {
  update: GuestUpdateWithoutUserInput!
  create: GuestCreateWithoutUserInput!
  where: GuestWhereInput
}

input GuestUpdateWithoutUserInput {
  category1: NullableStringFieldUpdateOperationsInput
  category2: NullableStringFieldUpdateOperationsInput
  personInCharge: NullableStringFieldUpdateOperationsInput
  class: NullableStringFieldUpdateOperationsInput
  seat: NullableStringFieldUpdateOperationsInput
  rejectionReason: NullableStringFieldUpdateOperationsInput
  description: NullableStringFieldUpdateOperationsInput
  checkInAt: NullableDateTimeFieldUpdateOperationsInput
  confirmationStatus: EnumConfirmationStatusFieldUpdateOperationsInput
  emailQueue: emailQueueUpdateManyWithoutGuestNestedInput
  whatsappQueue: whatsappQueueUpdateManyWithoutGuestNestedInput
}

input EnumConfirmationStatusFieldUpdateOperationsInput {
  set: ConfirmationStatus
}

input emailQueueUpdateManyWithoutGuestNestedInput {
  create: [emailQueueCreateWithoutGuestInput!]
  connectOrCreate: [emailQueueCreateOrConnectWithoutGuestInput!]
  upsert: [emailQueueUpsertWithWhereUniqueWithoutGuestInput!]
  createMany: emailQueueCreateManyGuestInputEnvelope
  set: [emailQueueWhereUniqueInput!]
  disconnect: [emailQueueWhereUniqueInput!]
  delete: [emailQueueWhereUniqueInput!]
  connect: [emailQueueWhereUniqueInput!]
  update: [emailQueueUpdateWithWhereUniqueWithoutGuestInput!]
  updateMany: [emailQueueUpdateManyWithWhereWithoutGuestInput!]
  deleteMany: [emailQueueScalarWhereInput!]
}

input emailQueueUpsertWithWhereUniqueWithoutGuestInput {
  where: emailQueueWhereUniqueInput!
  update: emailQueueUpdateWithoutGuestInput!
  create: emailQueueCreateWithoutGuestInput!
}

input emailQueueUpdateWithoutGuestInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  status: EnumQueueStatusFieldUpdateOperationsInput
}

input EnumQueueStatusFieldUpdateOperationsInput {
  set: QueueStatus
}

input emailQueueUpdateWithWhereUniqueWithoutGuestInput {
  where: emailQueueWhereUniqueInput!
  data: emailQueueUpdateWithoutGuestInput!
}

input emailQueueUpdateManyWithWhereWithoutGuestInput {
  where: emailQueueScalarWhereInput!
  data: emailQueueUpdateManyMutationInput!
}

input emailQueueScalarWhereInput {
  AND: [emailQueueScalarWhereInput!]
  OR: [emailQueueScalarWhereInput!]
  NOT: [emailQueueScalarWhereInput!]
  id: IntFilter
  createdAt: DateTimeFilter
  status: EnumQueueStatusFilter
  guestId: StringFilter
}

input emailQueueUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  status: EnumQueueStatusFieldUpdateOperationsInput
}

input whatsappQueueUpdateManyWithoutGuestNestedInput {
  create: [whatsappQueueCreateWithoutGuestInput!]
  connectOrCreate: [whatsappQueueCreateOrConnectWithoutGuestInput!]
  upsert: [whatsappQueueUpsertWithWhereUniqueWithoutGuestInput!]
  createMany: whatsappQueueCreateManyGuestInputEnvelope
  set: [whatsappQueueWhereUniqueInput!]
  disconnect: [whatsappQueueWhereUniqueInput!]
  delete: [whatsappQueueWhereUniqueInput!]
  connect: [whatsappQueueWhereUniqueInput!]
  update: [whatsappQueueUpdateWithWhereUniqueWithoutGuestInput!]
  updateMany: [whatsappQueueUpdateManyWithWhereWithoutGuestInput!]
  deleteMany: [whatsappQueueScalarWhereInput!]
}

input whatsappQueueUpsertWithWhereUniqueWithoutGuestInput {
  where: whatsappQueueWhereUniqueInput!
  update: whatsappQueueUpdateWithoutGuestInput!
  create: whatsappQueueCreateWithoutGuestInput!
}

input whatsappQueueUpdateWithoutGuestInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  status: EnumQueueStatusFieldUpdateOperationsInput
}

input whatsappQueueUpdateWithWhereUniqueWithoutGuestInput {
  where: whatsappQueueWhereUniqueInput!
  data: whatsappQueueUpdateWithoutGuestInput!
}

input whatsappQueueUpdateManyWithWhereWithoutGuestInput {
  where: whatsappQueueScalarWhereInput!
  data: whatsappQueueUpdateManyMutationInput!
}

input whatsappQueueScalarWhereInput {
  AND: [whatsappQueueScalarWhereInput!]
  OR: [whatsappQueueScalarWhereInput!]
  NOT: [whatsappQueueScalarWhereInput!]
  id: IntFilter
  createdAt: DateTimeFilter
  status: EnumQueueStatusFilter
  guestId: StringFilter
}

input whatsappQueueUpdateManyMutationInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  status: EnumQueueStatusFieldUpdateOperationsInput
}

input GuestUpdateToOneWithWhereWithoutUserInput {
  where: GuestWhereInput
  data: GuestUpdateWithoutUserInput!
}

input UserUpdateManyMutationInput {
  id: StringFieldUpdateOperationsInput
  fullName: StringFieldUpdateOperationsInput
  email: StringFieldUpdateOperationsInput
  password: StringFieldUpdateOperationsInput
  whatsapp: StringFieldUpdateOperationsInput
  createdAt: DateTimeFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  deletedAt: NullableDateTimeFieldUpdateOperationsInput
  role: EnumUserRoleFieldUpdateOperationsInput
  guestInfoId: NullableStringFieldUpdateOperationsInput
}

"""The `Upload` scalar type represents a file upload."""
scalar Upload

"""
Available ratios for images, SQUARE = 192x192, MODERN = 1920X1080 MODER_PORTRAIT = 1080x1920, OLD = 1400x1050, OLD_PORTRAIT = 1050x1400, BANNER = 1128x192, ULTRA_WIDE = 2560x1080, SUPER_WIDE = 3840x1080
"""
enum RatioEnum {
  SQUARE
  MODERN
  MODERN_PORTRAIT
  OLD
  OLD_PORTRAIT
  BANNER
  ULTRA_WIDE
  SUPER_WIDE
}

input LoginArgs {
  """Masukkan email"""
  email: String!

  """Masukkan password"""
  password: String!
}